/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev at Sun Jul 15 09:44:05 2018. */

#ifndef PB_ALERTS_PB_H_INCLUDED
#define PB_ALERTS_PB_H_INCLUDED
#include "pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _OBJECT_ID {
    OBJECT_ID_PERSON = 0,
    OBJECT_ID_DOG = 1,
    OBJECT_ID_CAT = 2,
    OBJECT_ID_CHAIR = 3,
    OBJECT_ID_CAR = 4,
    OBJECT_ID_BICYCLE = 5
} OBJECT_ID;
#define _OBJECT_ID_MIN OBJECT_ID_PERSON
#define _OBJECT_ID_MAX OBJECT_ID_BICYCLE
#define _OBJECT_ID_ARRAYSIZE ((OBJECT_ID)(OBJECT_ID_BICYCLE+1))

typedef enum _OPCODE {
    OPCODE_HEADER = 0,
    OPCODE_ACK = 1,
    OPCODE_NACK = 2,
    OPCODE_WARNINGS_SETTING = 3,
    OPCODE_WARNINGS = 4
} OPCODE;
#define _OPCODE_MIN OPCODE_HEADER
#define _OPCODE_MAX OPCODE_WARNINGS
#define _OPCODE_ARRAYSIZE ((OPCODE)(OPCODE_WARNINGS+1))

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(128) Header_message_data_t;
typedef struct _Header {
    OPCODE opcode;
    Header_message_data_t message_data;
/* @@protoc_insertion_point(struct:Header) */
} Header;

typedef struct _ObjectId {
    OBJECT_ID object_id;
    uint32_t confidence;
/* @@protoc_insertion_point(struct:ObjectId) */
} ObjectId;

typedef struct _Point {
    uint32_t x;
    uint32_t y;
/* @@protoc_insertion_point(struct:Point) */
} Point;

typedef PB_BYTES_ARRAY_T(2) Warnings_wornings_t;
typedef struct _Warnings {
    Warnings_wornings_t wornings;
/* @@protoc_insertion_point(struct:Warnings) */
} Warnings;

typedef struct _Polygon {
    pb_size_t points_count;
    Point points[4];
    pb_size_t object_ids_count;
    ObjectId object_ids[2];
/* @@protoc_insertion_point(struct:Polygon) */
} Polygon;

typedef struct _WarningSettings {
    pb_size_t polygons_count;
    Polygon polygons[4];
/* @@protoc_insertion_point(struct:WarningSettings) */
} WarningSettings;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Header_init_default                      {_OPCODE_MIN, {0, {0}}}
#define Point_init_default                       {0, 0}
#define ObjectId_init_default                    {_OBJECT_ID_MIN, 0}
#define Polygon_init_default                     {0, {Point_init_default, Point_init_default, Point_init_default, Point_init_default}, 0, {ObjectId_init_default, ObjectId_init_default}}
#define WarningSettings_init_default             {0, {Polygon_init_default, Polygon_init_default, Polygon_init_default, Polygon_init_default}}
#define Warnings_init_default                    {{0, {0}}}
#define Header_init_zero                         {_OPCODE_MIN, {0, {0}}}
#define Point_init_zero                          {0, 0}
#define ObjectId_init_zero                       {_OBJECT_ID_MIN, 0}
#define Polygon_init_zero                        {0, {Point_init_zero, Point_init_zero, Point_init_zero, Point_init_zero}, 0, {ObjectId_init_zero, ObjectId_init_zero}}
#define WarningSettings_init_zero                {0, {Polygon_init_zero, Polygon_init_zero, Polygon_init_zero, Polygon_init_zero}}
#define Warnings_init_zero                       {{0, {0}}}

/* Field tags (for use in manual encoding/decoding) */
#define Header_opcode_tag                        1
#define Header_message_data_tag                  2
#define ObjectId_object_id_tag                   1
#define ObjectId_confidence_tag                  2
#define Point_x_tag                              1
#define Point_y_tag                              2
#define Warnings_wornings_tag                    1
#define Polygon_points_tag                       1
#define Polygon_object_ids_tag                   2
#define WarningSettings_polygons_tag             1

/* Struct field encoding specification for nanopb */
extern const pb_field_t Header_fields[3];
extern const pb_field_t Point_fields[3];
extern const pb_field_t ObjectId_fields[3];
extern const pb_field_t Polygon_fields[3];
extern const pb_field_t WarningSettings_fields[2];
extern const pb_field_t Warnings_fields[2];

/* Maximum encoded size of messages (where known) */
#define Header_size                              133
#define Point_size                               12
#define ObjectId_size                            8
#define Polygon_size                             76
#define WarningSettings_size                     312
#define Warnings_size                            4

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define ALERTS_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
